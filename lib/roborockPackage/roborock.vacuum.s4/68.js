var PropTypes = require('prop-types'),
  t = {
    display: PropTypes.oneOf(['none', 'flex']),
    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    start: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    end: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    right: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    bottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    minWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    maxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    maxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    margin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginVertical: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginHorizontal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginRight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginStart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    marginEnd: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingVertical: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingHorizontal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingRight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingStart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    paddingEnd: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    borderWidth: PropTypes.number,
    borderTopWidth: PropTypes.number,
    borderStartWidth: PropTypes.number,
    borderEndWidth: PropTypes.number,
    borderRightWidth: PropTypes.number,
    borderBottomWidth: PropTypes.number,
    borderLeftWidth: PropTypes.number,
    position: PropTypes.oneOf(['absolute', 'relative']),
    flexDirection: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: PropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: PropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: PropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: PropTypes.number,
    flexGrow: PropTypes.number,
    flexShrink: PropTypes.number,
    flexBasis: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    aspectRatio: PropTypes.number,
    zIndex: PropTypes.number,
    direction: PropTypes.oneOf(['inherit', 'ltr', 'rtl']),
  };

module.exports = t;
